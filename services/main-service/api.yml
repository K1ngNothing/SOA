openapi: "3.0.0"

info:
  title: "Main Service API"
  version: "1.0.0"

paths:
  /register:
    post:
      summary: "Register a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: "User has been registered successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: "User already exists"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /update-user-info:
    put:
      summary: "Updates user's personal information"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                email:
                  type: string
                  format: email
                phone_number:
                  type: string
                auth_token:
                  type: string
              required:
                - first_name
                - last_name
                - date_of_birth
                - email
                - phone_number
                - auth_token
      responses:
        '200':
          description: "User's personal info successfully updated"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: "Authentication failed"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string



  /login:
    post:
      summary: "Authenticate a user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: "Authentication successful! Token is granted"
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                  message:
                    type: string
        '403':
          description: "Invalid username or password"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

