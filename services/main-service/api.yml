openapi: 3.0.0

info:
  title: Main Service API
  version: 1.0.0

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User has been registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'


  /login:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Authentication successful, token is granted
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
        '403':
          description: Invalid username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'


  /update-user-info:
    put:
      summary: Updates user's personal information
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                email:
                  type: string
                  format: email
                phone_number:
                  type: string
              required:
                - first_name
                - last_name
                - date_of_birth
                - email
                - phone_number
      responses:
        '200':
          description: User's personal info successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Invalid user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'


  /create-post:
    post:
      summary: Create a post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
      responses:
        '200':
          description: Post created successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  post_id:
                    type: string
                  message:
                    type: string
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'


  /update-post:
    put:
      summary: Update a post
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PostId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'

      responses:
        '200':
          description: Post updated successfully!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Invalid user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'


  /delete-post:
    delete:
      summary: Delete a post
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PostId'
      responses:
        '200':
          description: Post deleted successfully!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Invalid user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'


  /get-post:
    get:
      summary: Get a post by id
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PostId'
      responses:
        '200':
          description: Post retreived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Invalid user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'


  /get-posts:
    get:
      summary: Get posts
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: starting-post
          required: true
          schema:
            type: integer
        - in: header
          name: want-to-read
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
                  message:
                    type: string
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Invalid user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

components:
  parameters:
    PostId:
      in: header
      name: post-id
      required: true
      schema:
        type: integer

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    Content:
      type: object
      properties:
        content:
          type: string
      required:
        - content
    Message:
      type: object
      properties:
        message:
          type: string
    Post:
      type: object
      properties:
        post_id:
          type: integer
        author:
          type: integer
        content:
          type: string
      required:
        - post_id
        - author
        - content

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

servers:
  - url: http://localhost:5000/
    variables: {}
