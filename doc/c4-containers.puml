@startuml Social_network_containers

!include  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0
!includeurl ICONURL/common.puml
!includeurl ICONURL/devicons/python.puml
!includeurl ICONURL/devicons/postgresql.puml

Person(user, "Пользователь", "Пользователь социальной сети")

Container(frontend, "Фронтенд", "", "Удобный пользователю графический интерфейс")
Container(main_service, "Главный сервис", "Python", "Ответсвенен за обработку запросов пользователей, а также за регистрацию и аунтификацию", $sprite="python")
Container(statistics_service, "Сервис статистики", "Python", "Считает и хранит статистику лайков и просмотров", $sprite="python")
Container(content_service, "Сервис постов и комментариев", "Python", "Хранит посты и комментарии", $sprite="python")

ContainerDb(main_service_db, "main_service_db", "Postgres", "Хранит данные пользователей", $sprite="postgresql")
ContainerDb(statistics_db, "statistics_db", "Clickhouse", "Хранит статистику лайков и просмотров")
ContainerDb(content_db, "content_db", "Postgres", "Хранит посты и комментарии", $sprite="postgresql")
ContainerQueue(statistics_queue, "statistics_queue", "Kafka", "Очередь сообщений в сервис статистики")

Rel(user, frontend, "Создает стену, пишет посты, оставляет комментарии, и т.д.")
Rel(frontend, main_service, "Транслирует запросы пользователя", "REST")
Rel(main_service, statistics_service, "Сбор статистики", "gRPC")
Rel(main_service, content_service, "Работа с постами и комментарии", "gRPC")

Rel(main_service, main_service_db, "Сохраняет данные пользователей")
Rel(statistics_service, statistics_db, "Сохраняет статистику")
Rel(content_service, content_db, "Сохраняет посты и комментарии")
Rel(main_service, statistics_queue, "Кладет сообщение со статистикой в очередь")
Rel(statistics_service, statistics_queue, "Забирает накопившиеся сообщения")


@enduml
